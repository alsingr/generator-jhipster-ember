spring:
    profiles: prod
<% if (storage == 'postgres') { %>
    jpa:
        database-platform: <%=packageName%>.hibernate.CustomPostgreSQLDialect
        database: POSTGRESQL
        openInView: false
        show_sql: false
        generate-ddl: false
        hibernate:
            ddl-auto: none
            naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
        properties:
            hibernate.generate_statistics: false
<% } %><% if (storage == 'mongo') { %>
    data:
        mongodb:
          uri: mongodb://<%= docker ? 'mongo.docker' : 'localhost' %>/<%= _.underscored(baseName) %>
<% } %>
    thymeleaf:
        mode: XHTML
        cache: true
<% if (storage == 'postgres') { %>
database:
    dataSourceClassName: org.postgresql.ds.PGSimpleDataSource
    url: postgres://<%= _.underscored(baseName) %>:<%= _.underscored(baseName) %>@<%= docker ? 'postgresql.docker' : 'localhost' %>:5432/<%= _.underscored(baseName) %>
<% } %>
stormpath:
  app:
    name: <%=baseName%>-prod
  api:
    key:
      file:
        location: <%= _.unescape('\$\{HOME}/.config/stormpath/apiKey.properties')%>
      id:
      secret:
